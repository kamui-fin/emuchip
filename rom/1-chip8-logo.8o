# CHIP-8 logo ROM by Timendus, published here before:
# https://github.com/Timendus/chip-8/blob/master/octo/CHIP-8%20logo.8o

# 132 bytes, 20 cycles to show "CHIP-8" on the screen
#
# This ROM is simpler than the IBM logo in two ways:
#  a) It does not use the addition instruction
#  b) It only renders aligned sprites (all coordinates are multiples of 8)
#
# Uses only these five instructions:
#  * Clear the screen
#  * Load normal register with immediate value
#  * Load i register with immediate value
#  * Draw sprite to screen (only aligned)
#  * Jump (at the end, so kinda optional)

:macro show X address {
  v0 := X
  i := address
  sprite v0 v1 15
}

: main
  clear

  v1 := 1
  show  8 splash-0-0
  show 16 splash-1-0
  show 24 splash-2-0
  show 32 splash-3-0
  show 40 splash-4-0
  show 48 splash-5-0

  v1 := 16
  show  8 splash-0-1
  show 16 splash-1-1
  show 24 splash-2-1
  show 32 splash-3-1
  show 40 splash-4-1
  show 48 splash-5-1

  loop again
: splash-0-0
  0x0f 0x02 0x02 0x02 0x02 0x02 0x00 0x00 0x1f 0x3f 0x71 0xe0 0xe5 0xe0 0xe8
: splash-1-0
  0xa0 0x0d 0x2a 0x28 0x28 0x28 0x00 0x00 0x18 0xb8 0xb8 0x38 0x38 0x3f 0xbf
: splash-2-0
  0x00 0x19 0xa5 0xbd 0xa1 0x9d 0x00 0x00 0x0c 0x1d 0x1d 0x01 0x0d 0x1d 0x9d
: splash-3-0
  0x01 0xc7 0x29 0x29 0x29 0x27 0x00 0x00 0xf8 0xfc 0xce 0xc6 0xc6 0xc6 0xc6
: splash-4-0
  0x00 0x49 0x4a 0x49 0x48 0x3b 0x00 0x00 0x00 0x01 0x03 0x03 0x03 0x01 0xf0
: splash-5-0
  0x30 0x90 0x00 0x00 0x80 0x00 0x00 0x00 0xfe 0xc7 0x83 0x83 0x83 0xc6 0xfc
: splash-0-1
  0xe7 0xe0 0xe0 0xe0 0xe0 0x71 0x3f 0x1f 0x00 0x00 0x07 0x02 0x02 0x02 0x02
: splash-1-1
  0x39 0x38 0x38 0x38 0x38 0xb8 0xb8 0x38 0x00 0x00 0x31 0x4a 0x79 0x40 0x3b
: splash-2-1
  0xdd 0xdd 0xdd 0xdd 0xdd 0xdd 0xdd 0xdd 0x00 0x00 0xa0 0x38 0x20 0xa0 0x18
: splash-3-1
  0xce 0xfc 0xf8 0xc0 0xd4 0xdc 0xc4 0xc5 0x00 0x00 0x30 0x44 0x24 0x14 0x63
: splash-4-1
  0xf1 0x03 0x07 0x07 0x77 0x57 0x53 0x71 0x00 0x00 0x28 0x8e 0xa8 0xa8 0xa6
: splash-5-1
  0xce 0x87 0x03 0x03 0x03 0x87 0xfe 0xfc 0x00 0x00 0x60 0x90 0xf0 0x80 0x70

